<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="businessNode">
	<select id="getbusinessListPaged" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT a.Id,a.Code,a.Name,a.CategoryId,GROUP_CONCAT(c.Id),GROUP_CONCAT(c.Name) as Material
		FROM biz_business_node a 
		LEFT JOIN biz_business_node_material b ON a.Id = b.BusinessNodeId
		LEFT JOIN biz_material c ON b.MaterialId = c.Id
		GROUP BY a.Id
	</select>
	
	<select id="getRootNodes" resultType="java.util.HashMap">
		SELECT a.Id as id,true as open,a.ParentId,a.Name as name
		FROM biz_category a
		WHERE (a.ParentId IS NULL OR a.ParentId = 0) AND (a.IsDel IS NULL OR a.IsDel = 0)  AND a.Status = 2
		ORDER BY a.OrderNum
	</select>

	<select id="getNodesByParentID" resultType="java.util.HashMap">
		SELECT a.Id as id,true as open,a.ParentId,a.Name as name
		FROM biz_category a
		WHERE a.ParentId = #{parentId} AND (a.IsDel IS NULL OR a.IsDel = 0) AND a.Status = 2
		ORDER BY a.OrderNum
	</select>
	
	<select id="getBusinessById" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT a.Id,a.Code,a.Name,a.CategoryId,GROUP_CONCAT(c.Id) as MaterialId,d.Name as CategoryName
		FROM biz_business_node a 
		LEFT JOIN biz_business_node_material b ON a.Id = b.BusinessNodeId
		LEFT JOIN biz_material c ON b.MaterialId = c.Id
		LEFT JOIN biz_category d ON a.CategoryId = d.Id
		WHERE a.Id = #{id}
	</select>
	
	<insert id="save"  parameterType="java.util.HashMap" keyProperty="Id" useGeneratedKeys="true">
		INSERT INTO biz_business_node
			(Code,Name,CategoryId)
		VALUES
			(#{Code},#{Name},#{CategoryId})
	</insert>
	
	<delete id="deleteMaterial">
		DELETE FROM biz_business_node_material WHERE BusinessNodeId = #{BusinessNodeId}
	</delete>
	
	<delete id="deleteMaterialList">
		DELETE FROM biz_business_node_material 
		WHERE BusinessNodeId IN 
		<foreach collection="Id" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
		 </foreach>
	</delete>
	
	<insert id="saveMaterial">
		INSERT INTO biz_business_node_material
			(BusinessNodeId,MaterialId)
		VALUES 
			(#{BusinessNodeId},#{MaterialId})
	</insert>

	<update id="update" parameterType="java.util.HashMap">
		UPDATE biz_business_node SET Code = #{Code},Name = #{Name},CategoryId = #{CategoryId}
		WHERE Id = #{Id}
	</update>
	
	<delete id="delete" parameterType="java.util.HashMap">
		DELETE FROM biz_business_node WHERE Id IN
		 <foreach collection="Id" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
		 </foreach>
	</delete>
	
	<select id="getAllCategory" resultType="java.util.HashMap">
		SELECT a.Name,a.Id,a.Name as text,a.Id as value
	    FROM biz_category a
		WHERE (a.IsDel IS NULL OR a.IsDel = 0) AND a.Status = 2
	    ORDER BY a.OrderNum
	</select>
	
	<select id="getAllMaterial" resultType="java.util.HashMap">
		SELECT a.Name,a.Id,a.Name as text,a.Id as value
	    FROM biz_material a
	</select>
	
	<delete id="deleteByMaterialId" parameterType="java.util.HashMap">
		DELETE FROM biz_business_node_material WHERE MaterialId IN
		  <foreach collection="Id" index="index" item="item" open="(" separator="," close=")">  
            #{item}   
		 </foreach>
	</delete>
</mapper>