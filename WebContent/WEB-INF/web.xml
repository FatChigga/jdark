<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>crm</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<!-- 在上下文中设置profile的默认值 -->
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>development</param-value>
	</context-param>
	<listener>
		<listener-class>com.iptv.core.common.JdfServletContextListener</listener-class>
	</listener>

	<!-- 告知javaEE容器，有哪些内容需要添加到上下文中去 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/applicationContext.xml,
		<!-- /WEB-INF/classes/mvc-servlet.xml -->
		</param-value>
	</context-param>

	<!-- 加载LOG4J -->
	<context-param>
		<param-name>log4jExposeWebAppRoot</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<servlet>
		<servlet-name>log4jLoader</servlet-name>
		<servlet-class>com.iptv.core.common.Log4jConfigServlet</servlet-class>
		<init-param>
			<param-name>fileName</param-name>
			<param-value>log4j.properties</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- 动态设置项目的运行路径 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webapp.crm</param-value>
	</context-param>

	<!-- 配置静态资源 -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>default</servlet-name> -->
<!-- 		<url-pattern>/assets/*</url-pattern> -->
<!-- 	</servlet-mapping> -->

	<!-- 配置springmvc的前端控制器 -->
	<servlet>
		<servlet-name>mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 默认情况下：DispatcherServlet会寻找WEB-INF下，命名规范为[servlet-name]-servlet.xml文件。如：在上例中，它就会找/WEB-INF/spring-servlet.xml 
			如果需要修改，需要在web.xml中的<servlet>标记中增加 <init-param>。。。 </init-param>： -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/classes/mvc-servlet.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- spring框架提供的字符集过滤器 -->
	<!-- spring Web MVC框架提供了org.springframework.web.filter.CharacterEncodingFilter用于解决POST方式造成的中文乱码问题 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<!-- force强制，促使 -->
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- <filter> -->
	<!-- <filter-name>ssoClientFilter</filter-name> -->
	<!-- <filter-class>com.iptv.sso.client.SSOClientFilter</filter-class> -->
	<!-- </filter> -->
	<!-- <filter-mapping> -->
	<!-- <filter-name>ssoClientFilter</filter-name> -->
	<!-- <url-pattern>/*</url-pattern> -->
	<!-- </filter-mapping> -->

	<filter>
		<filter-name>loginFilter</filter-name>
		<filter-class>com.iptv.core.filter.LoginFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>loginFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>permisionFilter</filter-name>
		<filter-class>com.iptv.sys.filter.PermisionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>permisionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- 防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- WebService -->
	<servlet>
		<servlet-name>AxisServlet</servlet-name>
		<servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
</web-app>
